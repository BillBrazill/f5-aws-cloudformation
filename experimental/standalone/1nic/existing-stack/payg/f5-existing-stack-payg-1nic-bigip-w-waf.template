{
 "AWSTemplateFormatVersion": "2010-09-09",
 "Conditions": {
  "noCustomImageId": {
   "Fn::Equals": [
    "OPTIONAL",
    {
     "Ref": "customImageId"
    }
   ]
  },
  "optin": {
   "Fn::Equals": [
    "Yes",
    {
     "Ref": "allowUsageAnalytics"
    }
   ]
  },
  "useDynamicExternalIpAddr": {
   "Fn::Or": [
    {
     "Fn::Equals": [
      "DYNAMIC",
      {
       "Ref": "subnet1Az1Address"
      }
     ]
    },
    {
     "Fn::Equals": [
      "",
      {
       "Ref": "subnet1Az1Address"
      }
     ]
    }
   ]
  },
  "usePublicIP": {
   "Fn::Equals": [
    "Yes",
    {
     "Ref": "provisionPublicIP"
    }
   ]
  },
  "useStaticExternalIpAddr": {
   "Fn::Not": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        "DYNAMIC",
        {
         "Ref": "subnet1Az1Address"
        }
       ]
      },
      {
       "Fn::Equals": [
        "",
        {
         "Ref": "subnet1Az1Address"
        }
       ]
      }
     ]
    }
   ]
  }
 },
 "Description": "Template v5.5.0: AWS CloudFormation Template for creating a 1NIC BIG-IP in an existing VPC **WARNING** This template creates Amazon EC2 Instances. You will be billed for the AWS resources used if you create a stack from this template.",
 "Mappings": {
  "BigipRegionMap": {
   "ap-east-1": {
    "AdvancedWaf1000Mbps": "ami-61195c10",
    "AdvancedWaf16vCPU": "ami-42256033",
    "AdvancedWaf200Mbps": "ami-d21e5ba3",
    "AdvancedWaf25Mbps": "ami-201d5851",
    "AdvancedWaf8vCPU": "ami-d41e5ba5",
    "Best10000Mbps": "ami-4e195c3f",
    "Best1000Mbps": "ami-4f195c3e",
    "Best200Mbps": "ami-7f1d580e",
    "Best25Mbps": "ami-b01f5ac1",
    "Best5000Mbps": "ami-b31f5ac2",
    "Better10000Mbps": "ami-d01e5ba1",
    "Better1000Mbps": "ami-9e1e5bef",
    "Better200Mbps": "ami-9f1e5bee",
    "Better25Mbps": "ami-7c1d580d",
    "Better5000Mbps": "ami-8b195cfa",
    "Good10000Mbps": "ami-89195cf8",
    "Good1000Mbps": "ami-48195c39",
    "Good16vCPU": "ami-8f195cfe",
    "Good200Mbps": "ami-3d1d584c",
    "Good25Mbps": "ami-ef1f5a9e",
    "Good5000Mbps": "ami-3c1d584d",
    "PerAppVeAwaf200Mbps": "ami-d51e5ba4",
    "PerAppVeAwaf25Mbps": "ami-841e5bf5",
    "PerAppVeLtm200Mbps": "ami-821e5bf3",
    "PerAppVeLtm25Mbps": "ami-60195c11"
   },
   "ap-northeast-1": {
    "AdvancedWaf1000Mbps": "ami-070950dd0394f3622",
    "AdvancedWaf16vCPU": "ami-09e332beb5581387f",
    "AdvancedWaf200Mbps": "ami-0258188b8bddd84c4",
    "AdvancedWaf25Mbps": "ami-07a2f7372b39cb585",
    "AdvancedWaf8vCPU": "ami-04e924ee0b90563f6",
    "Best10000Mbps": "ami-0acb0107a45fc4895",
    "Best1000Mbps": "ami-01381d2c9b55ccae4",
    "Best200Mbps": "ami-0da5756352b4282d1",
    "Best25Mbps": "ami-027ad26a07824eefe",
    "Best5000Mbps": "ami-073df8861e888fa63",
    "Better10000Mbps": "ami-0ba0a0275a45aff03",
    "Better1000Mbps": "ami-0b49d4fa7efe8611f",
    "Better200Mbps": "ami-0ad5c66df33ca0754",
    "Better25Mbps": "ami-04a50121fa8b0db57",
    "Better5000Mbps": "ami-00090dffcb26b583c",
    "Good10000Mbps": "ami-001382cb0181a5f94",
    "Good1000Mbps": "ami-0558a946518661182",
    "Good16vCPU": "ami-0f598eb46d4e028f1",
    "Good200Mbps": "ami-04698fdc29749c359",
    "Good25Mbps": "ami-0c130bbac58124bba",
    "Good5000Mbps": "ami-0d824f0e563de46a3",
    "PerAppVeAwaf200Mbps": "ami-02e66867716ac8c74",
    "PerAppVeAwaf25Mbps": "ami-01f28451b0f53cf3c",
    "PerAppVeLtm200Mbps": "ami-052970f4b59931f16",
    "PerAppVeLtm25Mbps": "ami-09090599cfd94ecd8"
   },
   "ap-northeast-2": {
    "AdvancedWaf1000Mbps": "ami-0d6e1f4572a4d2333",
    "AdvancedWaf16vCPU": "ami-0bf40912572f66120",
    "AdvancedWaf200Mbps": "ami-08b03c944c5de9d38",
    "AdvancedWaf25Mbps": "ami-083991696d83397d3",
    "AdvancedWaf8vCPU": "ami-0041ce6bcac4bcfae",
    "Best10000Mbps": "ami-07f4d074df8a7b84e",
    "Best1000Mbps": "ami-04fb5d62186f99da0",
    "Best200Mbps": "ami-0f53bde165eb7f81d",
    "Best25Mbps": "ami-0bb7fc76bf3b691ab",
    "Best5000Mbps": "ami-00d555ade52f2d670",
    "Better10000Mbps": "ami-04682cf84b5fdf641",
    "Better1000Mbps": "ami-0f0af6918ff3ce738",
    "Better200Mbps": "ami-03943a06f0944f87e",
    "Better25Mbps": "ami-02198c0cb1aa128de",
    "Better5000Mbps": "ami-0fc1a4149d8a219bc",
    "Good10000Mbps": "ami-091710d24398dc8cc",
    "Good1000Mbps": "ami-0aee85209d5ba7602",
    "Good16vCPU": "ami-01d14e009ac300bef",
    "Good200Mbps": "ami-0fade79ff7e1baeb1",
    "Good25Mbps": "ami-0f3b18886709ad161",
    "Good5000Mbps": "ami-01054b94381947ece",
    "PerAppVeAwaf200Mbps": "ami-024ed46c0604179c2",
    "PerAppVeAwaf25Mbps": "ami-04ae47a971f68185f",
    "PerAppVeLtm200Mbps": "ami-0d45a3abe3e30b0ac",
    "PerAppVeLtm25Mbps": "ami-009f6dfde7f58f0e9"
   },
   "ap-south-1": {
    "AdvancedWaf1000Mbps": "ami-058f1603fa65dc3d0",
    "AdvancedWaf16vCPU": "ami-070287abe50796cb9",
    "AdvancedWaf200Mbps": "ami-083c7975e0659acf9",
    "AdvancedWaf25Mbps": "ami-001c3d43d0b710ab1",
    "AdvancedWaf8vCPU": "ami-010a24f51e18b58e9",
    "Best10000Mbps": "ami-0c742641dbcea158c",
    "Best1000Mbps": "ami-0ecbb75ae94e99dd9",
    "Best200Mbps": "ami-0911a150c6519c49f",
    "Best25Mbps": "ami-0d9dda95760b8f4e8",
    "Best5000Mbps": "ami-0983f8fbcd5a40dd6",
    "Better10000Mbps": "ami-09d87a4bdf4489580",
    "Better1000Mbps": "ami-03b2f3e4dfde4ec13",
    "Better200Mbps": "ami-04dfa70d0cb2ecf72",
    "Better25Mbps": "ami-00c8155bd4ff076ba",
    "Better5000Mbps": "ami-0958123ca4e8c0c1f",
    "Good10000Mbps": "ami-0c8f1e8a3e529fd12",
    "Good1000Mbps": "ami-08e45a3829eaafaf4",
    "Good16vCPU": "ami-0adea875a96dcab91",
    "Good200Mbps": "ami-0e99ccf1a362a9859",
    "Good25Mbps": "ami-06661555baa82b2b6",
    "Good5000Mbps": "ami-0c6bded775b146dff",
    "PerAppVeAwaf200Mbps": "ami-03c776034fec78438",
    "PerAppVeAwaf25Mbps": "ami-015a2a2852035c56b",
    "PerAppVeLtm200Mbps": "ami-0e8042503f677cf6e",
    "PerAppVeLtm25Mbps": "ami-0b325a5e0e59bbbb6"
   },
   "ap-southeast-1": {
    "AdvancedWaf1000Mbps": "ami-06105bca7a55e25e1",
    "AdvancedWaf16vCPU": "ami-0b26ddd0e38ceee15",
    "AdvancedWaf200Mbps": "ami-0dbdd34875e013ac6",
    "AdvancedWaf25Mbps": "ami-0b7dfa02582b18e17",
    "AdvancedWaf8vCPU": "ami-0729ef170af3d7fee",
    "Best10000Mbps": "ami-06fe0d303cf602a7a",
    "Best1000Mbps": "ami-07e852fe723713d10",
    "Best200Mbps": "ami-0ef5711f18498d4a9",
    "Best25Mbps": "ami-0755ce17344ca7a60",
    "Best5000Mbps": "ami-0d96f553a9015999b",
    "Better10000Mbps": "ami-0c094750b8a02a4af",
    "Better1000Mbps": "ami-03787422f828a4b47",
    "Better200Mbps": "ami-0d397a9988fde2b7a",
    "Better25Mbps": "ami-07cddb0b6d4724062",
    "Better5000Mbps": "ami-036190fe5aeeb127d",
    "Good10000Mbps": "ami-0f782fbdc1da447bb",
    "Good1000Mbps": "ami-03bda1aa9fe3d245a",
    "Good16vCPU": "ami-043d852e060914d30",
    "Good200Mbps": "ami-0444de1b7354ede26",
    "Good25Mbps": "ami-0853db395e0d98c93",
    "Good5000Mbps": "ami-0a02ab9d1f4b18da8",
    "PerAppVeAwaf200Mbps": "ami-08be68267747dfddf",
    "PerAppVeAwaf25Mbps": "ami-031258c9a950c111e",
    "PerAppVeLtm200Mbps": "ami-04207669bdb3e8132",
    "PerAppVeLtm25Mbps": "ami-05b7e66c51d6f7b8f"
   },
   "ap-southeast-2": {
    "AdvancedWaf1000Mbps": "ami-0cf540e770ef306e6",
    "AdvancedWaf16vCPU": "ami-0e5d0fec9381dcf5e",
    "AdvancedWaf200Mbps": "ami-056eb8b674459b34c",
    "AdvancedWaf25Mbps": "ami-0734a72c27b1e45d7",
    "AdvancedWaf8vCPU": "ami-0cdf8b264e78e3000",
    "Best10000Mbps": "ami-094dd46d832a02034",
    "Best1000Mbps": "ami-03c0de72e3d2ce2f1",
    "Best200Mbps": "ami-0e4eaf04a3587fcc3",
    "Best25Mbps": "ami-00bfb920c2e4870fe",
    "Best5000Mbps": "ami-08cc249e98aa9100f",
    "Better10000Mbps": "ami-01f7a22415db19337",
    "Better1000Mbps": "ami-0186a4dc4f87af7aa",
    "Better200Mbps": "ami-08d31350038a74952",
    "Better25Mbps": "ami-0065d8a1d514d41b5",
    "Better5000Mbps": "ami-0dcc92ac28dcea88c",
    "Good10000Mbps": "ami-0023d90879d078ed3",
    "Good1000Mbps": "ami-097c273b3441468b1",
    "Good16vCPU": "ami-0dcddb7a4e7c9dfbf",
    "Good200Mbps": "ami-02277f21825b87dda",
    "Good25Mbps": "ami-02229bd3bb315b989",
    "Good5000Mbps": "ami-0a49c4ab307edf929",
    "PerAppVeAwaf200Mbps": "ami-029ecec8bf1a9d076",
    "PerAppVeAwaf25Mbps": "ami-039fca159f7d05f68",
    "PerAppVeLtm200Mbps": "ami-03e1b95cc42bb5116",
    "PerAppVeLtm25Mbps": "ami-0c715cdd8d091fb48"
   },
   "ca-central-1": {
    "AdvancedWaf1000Mbps": "ami-09a795c5147d4af4d",
    "AdvancedWaf16vCPU": "ami-0431880ea41aa7f62",
    "AdvancedWaf200Mbps": "ami-03752272b1ffe20b7",
    "AdvancedWaf25Mbps": "ami-0ed466065fa429591",
    "AdvancedWaf8vCPU": "ami-0bce86dce4a8dadfa",
    "Best10000Mbps": "ami-0392187fcf7a4d452",
    "Best1000Mbps": "ami-06174013fcd1f5919",
    "Best200Mbps": "ami-02724d5fe4cf9009f",
    "Best25Mbps": "ami-08fee8b6cd2b33004",
    "Best5000Mbps": "ami-02dbc2c12e4f359d6",
    "Better10000Mbps": "ami-0ea4e45dac65b587f",
    "Better1000Mbps": "ami-0f6d2f597cc50974b",
    "Better200Mbps": "ami-0884c1fe3d7ed6485",
    "Better25Mbps": "ami-0ed0f45265e619446",
    "Better5000Mbps": "ami-0bf6a29294bba3344",
    "Good10000Mbps": "ami-098e9596d6f15beb4",
    "Good1000Mbps": "ami-01326e99796acd83a",
    "Good16vCPU": "ami-021bc70bb0845d8a8",
    "Good200Mbps": "ami-0632f175c79fac923",
    "Good25Mbps": "ami-0782d6615fe798449",
    "Good5000Mbps": "ami-083e14e352ffcfefe",
    "PerAppVeAwaf200Mbps": "ami-0588b8234264bad56",
    "PerAppVeAwaf25Mbps": "ami-047466b2b24264b38",
    "PerAppVeLtm200Mbps": "ami-03aebd706821316f2",
    "PerAppVeLtm25Mbps": "ami-07e81b6842c75a82f"
   },
   "eu-central-1": {
    "AdvancedWaf1000Mbps": "ami-07248f90a5c9ef53f",
    "AdvancedWaf16vCPU": "ami-04beba232c657d549",
    "AdvancedWaf200Mbps": "ami-0330a0a7bb210a64d",
    "AdvancedWaf25Mbps": "ami-08018f51bc9f0be5b",
    "AdvancedWaf8vCPU": "ami-01d44f876b6210ad9",
    "Best10000Mbps": "ami-08bdb2034593a6131",
    "Best1000Mbps": "ami-06c355cd6f416b208",
    "Best200Mbps": "ami-0b95c8364ffd968ba",
    "Best25Mbps": "ami-0b04bc4e0ebbb9178",
    "Best5000Mbps": "ami-0f64855794c044cd1",
    "Better10000Mbps": "ami-09a15a0014149fa82",
    "Better1000Mbps": "ami-0b0ef2fcd03133ff8",
    "Better200Mbps": "ami-0cfca05046113595a",
    "Better25Mbps": "ami-01a3e17dc27faf462",
    "Better5000Mbps": "ami-06feb43bd53ce3373",
    "Good10000Mbps": "ami-005db34f375e4bf59",
    "Good1000Mbps": "ami-0b89525dc8351aa74",
    "Good16vCPU": "ami-0e31528b6007c0bc4",
    "Good200Mbps": "ami-019ccaf238b32e1dd",
    "Good25Mbps": "ami-0f175be61eaf4f898",
    "Good5000Mbps": "ami-042c2a6d633cbe250",
    "PerAppVeAwaf200Mbps": "ami-03caac4e0c49e06f4",
    "PerAppVeAwaf25Mbps": "ami-017b447068979df2a",
    "PerAppVeLtm200Mbps": "ami-06d35c6a34c8f5471",
    "PerAppVeLtm25Mbps": "ami-01e138874334e20af"
   },
   "eu-north-1": {
    "AdvancedWaf1000Mbps": "ami-0a8d4448db1ef7d00",
    "AdvancedWaf16vCPU": "ami-0a7e9f55af7935659",
    "AdvancedWaf200Mbps": "ami-085082ab3d8b16448",
    "AdvancedWaf25Mbps": "ami-0ecebf8732d92ed0c",
    "AdvancedWaf8vCPU": "ami-00e3b038d728513bd",
    "Best10000Mbps": "ami-07a28581a667d0d11",
    "Best1000Mbps": "ami-0bea6a56664b6b7ad",
    "Best200Mbps": "ami-01ba92c457e60be56",
    "Best25Mbps": "ami-0f04b4e1bc2c4f095",
    "Best5000Mbps": "ami-08a6c049597890b87",
    "Better10000Mbps": "ami-000b0d686ce311213",
    "Better1000Mbps": "ami-0e25a73f629643950",
    "Better200Mbps": "ami-05fdf3f5559bce4e4",
    "Better25Mbps": "ami-083b006cd06381f4f",
    "Better5000Mbps": "ami-07cf0e6ab97ac9877",
    "Good10000Mbps": "ami-0af2b4cf18a9c1f03",
    "Good1000Mbps": "ami-043973063280b5169",
    "Good16vCPU": "ami-00644c3b31af42463",
    "Good200Mbps": "ami-08fd1aedb6b3e2289",
    "Good25Mbps": "ami-0a86fc3d2763e6bbb",
    "Good5000Mbps": "ami-08eb49c25219b9e9e",
    "PerAppVeAwaf200Mbps": "ami-0adb80143d1c6fd63",
    "PerAppVeAwaf25Mbps": "ami-0a0b84b03fcf93d25",
    "PerAppVeLtm200Mbps": "ami-08becea1b37b38d28",
    "PerAppVeLtm25Mbps": "ami-001d30af6d18adcac"
   },
   "eu-west-1": {
    "AdvancedWaf1000Mbps": "ami-0623189081fa2bbda",
    "AdvancedWaf16vCPU": "ami-0c1a8c5743a777afd",
    "AdvancedWaf200Mbps": "ami-0cd1c57a224a4039b",
    "AdvancedWaf25Mbps": "ami-029a6a15f248d67a2",
    "AdvancedWaf8vCPU": "ami-0a9506ab05a9567fb",
    "Best10000Mbps": "ami-00d1bb569e4f8211c",
    "Best1000Mbps": "ami-043886045f6b734f0",
    "Best200Mbps": "ami-01d164bf20b66c25c",
    "Best25Mbps": "ami-00811255cdc0901cb",
    "Best5000Mbps": "ami-0654f8cbcf478c4ff",
    "Better10000Mbps": "ami-0d9c84c666f2e8b74",
    "Better1000Mbps": "ami-0e6b70037f43f6810",
    "Better200Mbps": "ami-066de965994963a65",
    "Better25Mbps": "ami-0e29840bfd7eee50f",
    "Better5000Mbps": "ami-0c01d49a7266831c4",
    "Good10000Mbps": "ami-0da8ae6665c90f497",
    "Good1000Mbps": "ami-04414aafec063801e",
    "Good16vCPU": "ami-072498101d22bef82",
    "Good200Mbps": "ami-09b39f7a5ba2ca8f5",
    "Good25Mbps": "ami-0958ed8a70165374f",
    "Good5000Mbps": "ami-013c3b4256b62b606",
    "PerAppVeAwaf200Mbps": "ami-0077b810396b48087",
    "PerAppVeAwaf25Mbps": "ami-0ab5ab0db467b2c3e",
    "PerAppVeLtm200Mbps": "ami-0e74c24be711c83cc",
    "PerAppVeLtm25Mbps": "ami-0856e97d30b49dbc2"
   },
   "eu-west-2": {
    "AdvancedWaf1000Mbps": "ami-01079dbad123d9b28",
    "AdvancedWaf16vCPU": "ami-0d05b27a077be0f83",
    "AdvancedWaf200Mbps": "ami-0cc1e1228c61e976f",
    "AdvancedWaf25Mbps": "ami-059844e0f1e092349",
    "AdvancedWaf8vCPU": "ami-0ef27fe41b048b53e",
    "Best10000Mbps": "ami-090ff4233ffdda6c4",
    "Best1000Mbps": "ami-0806232f6e4113f5a",
    "Best200Mbps": "ami-09d9048cacbfa02b3",
    "Best25Mbps": "ami-0146c9aadad6097e8",
    "Best5000Mbps": "ami-08b0f4988173bd754",
    "Better10000Mbps": "ami-0bd1848346240d7dd",
    "Better1000Mbps": "ami-024a39e2adf91f8a0",
    "Better200Mbps": "ami-00cfce458bfa06743",
    "Better25Mbps": "ami-04ce990ef928f7a2c",
    "Better5000Mbps": "ami-0d97d30b28acac65d",
    "Good10000Mbps": "ami-088a120b995031e89",
    "Good1000Mbps": "ami-0756e29e0f11535fe",
    "Good16vCPU": "ami-059dfc7be3156f8d6",
    "Good200Mbps": "ami-030e4e7fe41c850c3",
    "Good25Mbps": "ami-0ce12bd9028ce3d2a",
    "Good5000Mbps": "ami-05763e8bb2d1bb43f",
    "PerAppVeAwaf200Mbps": "ami-064ec3cb85aa0a54d",
    "PerAppVeAwaf25Mbps": "ami-099e03aead8cc17d3",
    "PerAppVeLtm200Mbps": "ami-02d25c026460b3b36",
    "PerAppVeLtm25Mbps": "ami-08bd92c96e8867368"
   },
   "eu-west-3": {
    "AdvancedWaf1000Mbps": "ami-0e04d9a020627521e",
    "AdvancedWaf16vCPU": "ami-0ed1561d930a74b23",
    "AdvancedWaf200Mbps": "ami-0f3552cf525ab94cc",
    "AdvancedWaf25Mbps": "ami-02a87be6ceba85142",
    "AdvancedWaf8vCPU": "ami-0d87b1762fceda4df",
    "Best10000Mbps": "ami-01043139c836cf7b3",
    "Best1000Mbps": "ami-0dde18922009e869d",
    "Best200Mbps": "ami-0c4d3984202a216ed",
    "Best25Mbps": "ami-0f545f91a302cd713",
    "Best5000Mbps": "ami-03facaae6d9d27bed",
    "Better10000Mbps": "ami-0b8ff86e09ed97ec1",
    "Better1000Mbps": "ami-026facb4f977dfced",
    "Better200Mbps": "ami-085a5d3d20d25ba08",
    "Better25Mbps": "ami-0560acdcd9485e1cf",
    "Better5000Mbps": "ami-06f855fcd952b1f6d",
    "Good10000Mbps": "ami-05f94b14030f69d36",
    "Good1000Mbps": "ami-0c3870e0d679e66e1",
    "Good16vCPU": "ami-04973c5b2b4ceba75",
    "Good200Mbps": "ami-0d49441083dd4729b",
    "Good25Mbps": "ami-0708d158b13aea044",
    "Good5000Mbps": "ami-035ac603e7ed1a65a",
    "PerAppVeAwaf200Mbps": "ami-04cd0d9707fa7d243",
    "PerAppVeAwaf25Mbps": "ami-06d274e8821c6fb3f",
    "PerAppVeLtm200Mbps": "ami-0c650ec01742168d1",
    "PerAppVeLtm25Mbps": "ami-0696df7f27afe1243"
   },
   "me-south-1": {
    "AdvancedWaf1000Mbps": "ami-0b7c31e7fc1dcf124",
    "AdvancedWaf200Mbps": "ami-091b13f4d0286a4a7",
    "AdvancedWaf25Mbps": "ami-0ab28e7060b03c63a",
    "AdvancedWaf8vCPU": "ami-0c1a5a581bc019726",
    "Best10000Mbps": "ami-0d7fb5694291cd7b7",
    "Best1000Mbps": "ami-06c91b3240785e7cf",
    "Best200Mbps": "ami-0a24d910282ade75a",
    "Best25Mbps": "ami-067d13876ebee562e",
    "Best5000Mbps": "ami-0edbd7ff8378a40a1",
    "Better10000Mbps": "ami-0a57e1f886217c21c",
    "Better1000Mbps": "ami-08f5c076ff9bb05d8",
    "Better200Mbps": "ami-07075cc7f67bc6b9b",
    "Better25Mbps": "ami-06b7947def1840643",
    "Better5000Mbps": "ami-083c20c6c9ef7e33a",
    "Good10000Mbps": "ami-029507afc493c1753",
    "Good1000Mbps": "ami-00d5327fd59c859d9",
    "Good200Mbps": "ami-064833fc3023e64ab",
    "Good25Mbps": "ami-04948eaad97fa5a81",
    "Good5000Mbps": "ami-0874cbc51ca3d59a6",
    "PerAppVeAwaf200Mbps": "ami-07e571624c4727f77",
    "PerAppVeAwaf25Mbps": "ami-0000d38706bef9da8",
    "PerAppVeLtm200Mbps": "ami-068e6392cf9fa011e",
    "PerAppVeLtm25Mbps": "ami-0aa8cdc506bc73a2a"
   },
   "sa-east-1": {
    "AdvancedWaf1000Mbps": "ami-04518283ea9b71b9f",
    "AdvancedWaf16vCPU": "ami-00c13af4cffe14586",
    "AdvancedWaf200Mbps": "ami-03c134483d33b4773",
    "AdvancedWaf25Mbps": "ami-0a2694d74a90dfd2b",
    "AdvancedWaf8vCPU": "ami-02ed07fb6ca329036",
    "Best10000Mbps": "ami-0e7e98cb9b06c420c",
    "Best1000Mbps": "ami-04b3beb6198822ae7",
    "Best200Mbps": "ami-01a0b96a0d8b03d80",
    "Best25Mbps": "ami-0232b6f32203d5a26",
    "Best5000Mbps": "ami-0b4053f4cee7e2a25",
    "Better10000Mbps": "ami-0ee7fa49abc8fa142",
    "Better1000Mbps": "ami-046f1ec4dc17f60ee",
    "Better200Mbps": "ami-0a6620ac0a06a27bb",
    "Better25Mbps": "ami-0b4e2b715dfc456e0",
    "Better5000Mbps": "ami-0f0c1895697465070",
    "Good10000Mbps": "ami-00ab31eef42759d6e",
    "Good1000Mbps": "ami-05a9d99b0fbbe136b",
    "Good16vCPU": "ami-090749bcc1fae0116",
    "Good200Mbps": "ami-0a02369f71daa9779",
    "Good25Mbps": "ami-074bac088b4bdd446",
    "Good5000Mbps": "ami-01923bbc7836faf56",
    "PerAppVeAwaf200Mbps": "ami-039784e4285da5fb9",
    "PerAppVeAwaf25Mbps": "ami-0490a6b9cf5a0fa14",
    "PerAppVeLtm200Mbps": "ami-089504b99d99be685",
    "PerAppVeLtm25Mbps": "ami-005b0b6923468084c"
   },
   "us-east-1": {
    "AdvancedWaf1000Mbps": "ami-0c83f27f3b93e10f9",
    "AdvancedWaf16vCPU": "ami-0e09fabf6cf9aeb2c",
    "AdvancedWaf200Mbps": "ami-0711dc0cb3868e9a6",
    "AdvancedWaf25Mbps": "ami-0405ebc703c4d424e",
    "AdvancedWaf8vCPU": "ami-0dc6ab4efc970c176",
    "Best10000Mbps": "ami-05fbaf50624045c2d",
    "Best1000Mbps": "ami-01c20586b227d72aa",
    "Best200Mbps": "ami-01b4a654d11d8f221",
    "Best25Mbps": "ami-07b162cafd04ce12c",
    "Best5000Mbps": "ami-04eb7b9f921e55bcf",
    "Better10000Mbps": "ami-0e1b7bb3056ba04d9",
    "Better1000Mbps": "ami-0ee074a77fbbc3d4c",
    "Better200Mbps": "ami-0cfe57ca00015d0cd",
    "Better25Mbps": "ami-0017cac36e81ebcf7",
    "Better5000Mbps": "ami-0259595b58c14a3f8",
    "Good10000Mbps": "ami-0be811f2f45cf9f7d",
    "Good1000Mbps": "ami-0d124391b77f8767d",
    "Good16vCPU": "ami-0596a6bb1095f72db",
    "Good200Mbps": "ami-0d833b0b5c9ba3805",
    "Good25Mbps": "ami-00eeec1a00568822c",
    "Good5000Mbps": "ami-0781d493f685075c9",
    "PerAppVeAwaf200Mbps": "ami-057c47fadd825a560",
    "PerAppVeAwaf25Mbps": "ami-03872c5cebcac4a77",
    "PerAppVeLtm200Mbps": "ami-0b1269530e9abd4b1",
    "PerAppVeLtm25Mbps": "ami-042b0a5c841e68f8a"
   },
   "us-east-2": {
    "AdvancedWaf1000Mbps": "ami-02c6acece6e722333",
    "AdvancedWaf16vCPU": "ami-005b6fd3ed8eecbba",
    "AdvancedWaf200Mbps": "ami-030fa7b5f263ea637",
    "AdvancedWaf25Mbps": "ami-0e9670895aa5b6a52",
    "AdvancedWaf8vCPU": "ami-00c5b3b1f02010bcc",
    "Best10000Mbps": "ami-0fd5c0dbfa25fb271",
    "Best1000Mbps": "ami-07834cb4b606a035c",
    "Best200Mbps": "ami-023ebcffd98742a46",
    "Best25Mbps": "ami-0c9b3c8c04695434d",
    "Best5000Mbps": "ami-07c04917e377d006a",
    "Better10000Mbps": "ami-0cc9ada7de5bbe0d8",
    "Better1000Mbps": "ami-0d6d596abb08fcca6",
    "Better200Mbps": "ami-01d2742b603a95771",
    "Better25Mbps": "ami-06632a9194fd5b30e",
    "Better5000Mbps": "ami-06fbbbdc16243871d",
    "Good10000Mbps": "ami-0f47c542634ebdf3c",
    "Good1000Mbps": "ami-0c93b98a5ec3f7425",
    "Good16vCPU": "ami-056055aed58bae470",
    "Good200Mbps": "ami-0498136d7f8148074",
    "Good25Mbps": "ami-02600564bac7a4551",
    "Good5000Mbps": "ami-0948f8448c9f3ce1d",
    "PerAppVeAwaf200Mbps": "ami-042df0b3c90781a3a",
    "PerAppVeAwaf25Mbps": "ami-0c330b26fb301b83a",
    "PerAppVeLtm200Mbps": "ami-037ead127be2b0fd8",
    "PerAppVeLtm25Mbps": "ami-0b9d1c89e60064571"
   },
   "us-gov-east-1": {
    "AdvancedWaf1000Mbps": "ami-f0769581",
    "AdvancedWaf16vCPU": "ami-a17695d0",
    "AdvancedWaf200Mbps": "ami-79759608",
    "AdvancedWaf25Mbps": "ami-29759658",
    "AdvancedWaf8vCPU": "ami-867b98f7",
    "Best10000Mbps": "ami-d87390a9",
    "Best1000Mbps": "ami-f3769582",
    "Best200Mbps": "ami-65769514",
    "Best25Mbps": "ami-f4769585",
    "Best5000Mbps": "ami-f5769584",
    "Better10000Mbps": "ami-f5779484",
    "Better1000Mbps": "ami-e8769599",
    "Better200Mbps": "ami-d67695a7",
    "Better25Mbps": "ami-ae7093df",
    "Better5000Mbps": "ami-ba7695cb",
    "Good10000Mbps": "ami-1c698a6d",
    "Good1000Mbps": "ami-74759605",
    "Good16vCPU": "ami-53759622",
    "Good200Mbps": "ami-75759604",
    "Good25Mbps": "ami-19698a68",
    "Good5000Mbps": "ami-846e8df5",
    "PerAppVeAwaf200Mbps": "ami-177a9966",
    "PerAppVeAwaf25Mbps": "ami-0d76957c",
    "PerAppVeLtm200Mbps": "ami-8c6b88fd",
    "PerAppVeLtm25Mbps": "ami-306d8e41"
   },
   "us-gov-west-1": {
    "AdvancedWaf1000Mbps": "ami-cf2f74ae",
    "AdvancedWaf16vCPU": "ami-475d0626",
    "AdvancedWaf200Mbps": "ami-d22279b3",
    "AdvancedWaf25Mbps": "ami-0f5c076e",
    "AdvancedWaf8vCPU": "ami-272d7646",
    "Best10000Mbps": "ami-1a28737b",
    "Best1000Mbps": "ami-ea316a8b",
    "Best200Mbps": "ami-f3376c92",
    "Best25Mbps": "ami-b32972d2",
    "Best5000Mbps": "ami-582b7039",
    "Better10000Mbps": "ami-1d5f047c",
    "Better1000Mbps": "ami-f05a0191",
    "Better200Mbps": "ami-04580365",
    "Better25Mbps": "ami-e3590282",
    "Better5000Mbps": "ami-bb5a01da",
    "Good10000Mbps": "ami-3c015a5d",
    "Good1000Mbps": "ami-cd3f64ac",
    "Good16vCPU": "ami-875902e6",
    "Good200Mbps": "ami-333b6052",
    "Good25Mbps": "ami-56386337",
    "Good5000Mbps": "ami-b5065dd4",
    "PerAppVeAwaf200Mbps": "ami-60530801",
    "PerAppVeAwaf25Mbps": "ami-755f0414",
    "PerAppVeLtm200Mbps": "ami-b10b50d0",
    "PerAppVeLtm25Mbps": "ami-ca0c57ab"
   },
   "us-west-1": {
    "AdvancedWaf1000Mbps": "ami-00b42d1001b02e5a3",
    "AdvancedWaf16vCPU": "ami-057aa0a96387bd6e3",
    "AdvancedWaf200Mbps": "ami-05428c7bd86425ddf",
    "AdvancedWaf25Mbps": "ami-0f72ac736e3953b43",
    "AdvancedWaf8vCPU": "ami-0b791b0c1363dcac6",
    "Best10000Mbps": "ami-00cd22628e0839284",
    "Best1000Mbps": "ami-0ccf5516fa2d4bcdd",
    "Best200Mbps": "ami-055f008a4145d9235",
    "Best25Mbps": "ami-0a51cc51049922d3d",
    "Best5000Mbps": "ami-0d409aab2d140e9b2",
    "Better10000Mbps": "ami-00d4258a56b25d628",
    "Better1000Mbps": "ami-00e9a38a13ac8f8eb",
    "Better200Mbps": "ami-05255633931c69ad0",
    "Better25Mbps": "ami-0cb4c9d15907f4584",
    "Better5000Mbps": "ami-08978e98774a76dd7",
    "Good10000Mbps": "ami-080c6770f74209b85",
    "Good1000Mbps": "ami-0a719828bec991fa6",
    "Good16vCPU": "ami-0efd51a465bab642d",
    "Good200Mbps": "ami-0b75355fd731374dc",
    "Good25Mbps": "ami-0c131f9cdb9fe7bf6",
    "Good5000Mbps": "ami-0113cc8a3840e944b",
    "PerAppVeAwaf200Mbps": "ami-02e86aeb55a6ba82a",
    "PerAppVeAwaf25Mbps": "ami-044b4c811785392af",
    "PerAppVeLtm200Mbps": "ami-0b8dde205871037b2",
    "PerAppVeLtm25Mbps": "ami-0c3ca4242bbdf0498"
   },
   "us-west-2": {
    "AdvancedWaf1000Mbps": "ami-0c72e572fb7a30e76",
    "AdvancedWaf16vCPU": "ami-02e503ca8c199573a",
    "AdvancedWaf200Mbps": "ami-08b96d17a0c30974f",
    "AdvancedWaf25Mbps": "ami-00776c4dc03554d0c",
    "AdvancedWaf8vCPU": "ami-00de2bea7a96407b8",
    "Best10000Mbps": "ami-0bba5626ae98c8ae0",
    "Best1000Mbps": "ami-0df7ee0924a7cc4c6",
    "Best200Mbps": "ami-01d45700b8f89a149",
    "Best25Mbps": "ami-020bbd3253e48a228",
    "Best5000Mbps": "ami-0258e6a97751c8f36",
    "Better10000Mbps": "ami-0a88e9c9a954dc992",
    "Better1000Mbps": "ami-08196b882b6228aae",
    "Better200Mbps": "ami-068c446ea540c3283",
    "Better25Mbps": "ami-0ec957ce05bb92ec0",
    "Better5000Mbps": "ami-033528b6df86004fe",
    "Good10000Mbps": "ami-0d852e0929947ab22",
    "Good1000Mbps": "ami-0a14126339ef06433",
    "Good16vCPU": "ami-0ba67182d4f1850d1",
    "Good200Mbps": "ami-054da605916044dac",
    "Good25Mbps": "ami-09a3fc191fe45946b",
    "Good5000Mbps": "ami-0f6d0429073f451f0",
    "PerAppVeAwaf200Mbps": "ami-093022af881c437ac",
    "PerAppVeAwaf25Mbps": "ami-0d87cb58e21b99082",
    "PerAppVeLtm200Mbps": "ami-0c9e5692527934a67",
    "PerAppVeLtm25Mbps": "ami-0867137742082809e"
   }
  }
 },
 "Metadata": {
  "AWS::CloudFormation::Interface": {
   "ParameterGroups": [
    {
     "Label": {
      "default": "NETWORKING CONFIGURATION"
     },
     "Parameters": [
      "Vpc",
      "managementSubnetAz1",
      "managementSubnetAz1Address",
      "managementSubnetAz2",
      "subnet1Az1",
      "subnet1Az1Address",
      "subnet1Az2",
      "subnet2Az1",
      "subnet2Az1Address",
      "subnet2Az2",
      "availabilityZone1",
      "availabilityZone2",
      "numberOfAdditionalNics",
      "additionalNicLocation",
      "provisionPublicIP"
     ]
    },
    {
     "Label": {
      "default": "INSTANCE CONFIGURATION"
     },
     "Parameters": [
      "imageName",
      "customImageId",
      "instanceType",
      "applicationInstanceType",
      "licenseKey1",
      "licenseKey2",
      "managementGuiPort",
      "sshKey",
      "restrictedSrcAddress",
      "restrictedSrcAddressApp",
      "ntpServer",
      "timezone",
      "bigIpModules"
     ]
    },
    {
     "Label": {
      "default": "TAGS"
     },
     "Parameters": [
      "application",
      "environment",
      "group",
      "owner",
      "costcenter"
     ]
    },
    {},
    {
     "Label": {
      "default": "TEMPLATE ANALYTICS"
     },
     "Parameters": [
      "allowUsageAnalytics",
      "allowPhoneHome"
     ]
    },
    {
     "Label": {
      "default": "VIRTUAL SERVICE CONFIGURATION"
     },
     "Parameters": [
      "declarationUrl"
     ]
    }
   ],
   "ParameterLabels": {
    "Vpc": {
     "default": "VPC"
    },
    "additionalNicLocation": {
     "default": "Additional NIC Location"
    },
    "allowPhoneHome": {
     "default": "Send Anonymous Device Statistics to F5"
    },
    "allowUsageAnalytics": {
     "default": "Send Anonymous Template Statistics to F5"
    },
    "application": {
     "default": "Application"
    },
    "applicationInstanceType": {
     "default": "Application Instance Type"
    },
    "availabilityZone1": {
     "default": "Availability Zone 1"
    },
    "availabilityZone2": {
     "default": "Availability Zone 2"
    },
    "bigIpModules": {
     "default": "BIG-IP Modules"
    },
    "costcenter": {
     "default": "Cost Center"
    },
    "customImageId": {
     "default": "Custom Image Id"
    },
    "declarationUrl": {
     "default": "AS3 Declaration URL"
    },
    "environment": {
     "default": "Environment"
    },
    "group": {
     "default": "Group"
    },
    "imageName": {
     "default": "BIG-IP Image Name"
    },
    "instanceType": {
     "default": "AWS Instance Size"
    },
    "licenseKey1": {
     "default": "License Key 1"
    },
    "licenseKey2": {
     "default": "License Key 2"
    },
    "managementGuiPort": {
     "default": "BIG-IP Management Port"
    },
    "managementSubnetAz1": {
     "default": "Management Subnet AZ1"
    },
    "managementSubnetAz1Address": {
     "default": "Management Subnet AZ1 Static IP Address"
    },
    "managementSubnetAz2": {
     "default": "Management Subnet AZ2"
    },
    "ntpServer": {
     "default": "NTP Server"
    },
    "numberOfAdditionalNics": {
     "default": "Number Of Additional NICs"
    },
    "owner": {
     "default": "Owner"
    },
    "provisionPublicIP": {
     "default": "Provision Public IP addresses for the BIG-IP interfaces"
    },
    "restrictedSrcAddress": {
     "default": "Source Address(es) for Management Access"
    },
    "restrictedSrcAddressApp": {
     "default": "Source Address(es) for Web Application Access (80/443)"
    },
    "sshKey": {
     "default": "SSH Key"
    },
    "subnet1Az1": {
     "default": "Subnet1 in AZ1"
    },
    "subnet1Az1Address": {
     "default": "Subnet1 AZ1 Static IP Addresses"
    },
    "subnet1Az2": {
     "default": "Subnet1 in AZ2"
    },
    "subnet2Az1": {
     "default": "Subnet2 in AZ1"
    },
    "subnet2Az1Address": {
     "default": "Subnet2 AZ1 Static IP Address"
    },
    "subnet2Az2": {
     "default": "Subnet2 in AZ2"
    },
    "timezone": {
     "default": "Timezone (Olson)"
    }
   }
  },
  "Version": "5.5.0"
 },
 "Outputs": {
  "Bigip1ExternalInterfacePrivateIp": {
   "Description": "Internally routable IP of the public interface on BIG-IP",
   "Value": {
    "Fn::If": [
     "useDynamicExternalIpAddr",
     {
      "Fn::GetAtt": [
       "Bigip1subnet1Az1Interface",
       "PrimaryPrivateIpAddress"
      ]
     },
     {
      "Fn::GetAtt": [
       "Bigip1Staticsubnet1Az1Interface",
       "PrimaryPrivateIpAddress"
      ]
     }
    ]
   }
  },
  "Bigip1InstanceId": {
   "Description": "Instance Id of BIG-IP in Amazon",
   "Value": {
    "Ref": "Bigip1Instance"
   }
  },
  "Bigip1Url": {
   "Condition": "usePublicIP",
   "Description": "BIG-IP Management GUI",
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Fn::GetAtt": [
        "Bigip1Instance",
        "PublicIp"
       ]
      },
      ":",
      {
       "Ref": "managementGuiPort"
      }
     ]
    ]
   }
  },
  "Bigip1VipEipAddress": {
   "Condition": "usePublicIP",
   "Description": "EIP address for VIP",
   "Value": {
    "Fn::Join": [
     "",
     [
      "http://",
      {
       "Fn::GetAtt": [
        "Bigip1Instance",
        "PublicIp"
       ]
      },
      ":80"
     ]
    ]
   }
  },
  "Bigip1subnet1Az1Interface": {
   "Description": "External interface Id on BIG-IP",
   "Value": {
    "Fn::If": [
     "useDynamicExternalIpAddr",
     {
      "Ref": "Bigip1subnet1Az1Interface"
     },
     {
      "Ref": "Bigip1Staticsubnet1Az1Interface"
     }
    ]
   }
  },
  "Bigip1subnet1Az1SelfEipAddress": {
   "Condition": "usePublicIP",
   "Description": "IP Address of the External interface attached to BIG-IP",
   "Value": {
    "Ref": "Bigip1subnet1Az1SelfEipAddress"
   }
  },
  "availabilityZone1": {
   "Description": "Availability Zone",
   "Value": {
    "Fn::GetAtt": [
     "Bigip1Instance",
     "AvailabilityZone"
    ]
   }
  },
  "bigipExternalSecurityGroup": {
   "Description": "Public or External Security Group",
   "Value": {
    "Ref": "bigipExternalSecurityGroup"
   }
  }
 },
 "Parameters": {
  "Vpc": {
   "ConstraintDescription": "This must be an existing VPC within the working region.",
   "Type": "AWS::EC2::VPC::Id"
  },
  "allowPhoneHome": {
   "AllowedValues": [
    "Yes",
    "No"
   ],
   "Default": "Yes",
   "Description": "This deployment can send anonymous device statistics to F5 to help us determine how to improve our solutions. If you select **No** statistics are not sent.",
   "Type": "String"
  },
  "allowUsageAnalytics": {
   "AllowedValues": [
    "Yes",
    "No"
   ],
   "Default": "Yes",
   "Description": "This deployment can send anonymous template statistics to F5 to help us determine how to improve our solutions. If you select **No** statistics are not sent.",
   "Type": "String"
  },
  "application": {
   "Default": "f5app",
   "Description": "Name of the Application Tag",
   "Type": "String"
  },
  "bigIpModules": {
   "Default": "ltm:nominal,asm:nominal",
   "Description": "Comma separated list of modules and levels to provision, for example: ltm:nominal,asm:nominal",
   "Type": "String"
  },
  "costcenter": {
   "Default": "f5costcenter",
   "Description": "Name of the Cost Center Tag",
   "Type": "String"
  },
  "customImageId": {
   "ConstraintDescription": "Must be a valid AMI Id",
   "Default": "OPTIONAL",
   "Description": "If you would like to deploy using a custom BIG-IP image, provide the AMI Id.  **Note**: Unless specifically required, leave the default of **OPTIONAL**",
   "MaxLength": 255,
   "MinLength": 1,
   "Type": "String"
  },
  "declarationUrl": {
   "AllowedPattern": "^(http:\\/\\/|https:\\/\\/)?[a-z0-9]+([\\-\\.]{1}[a-z0-9]+)*\\.[a-z]{2,5}(:[0-9]{1,5})?(\\/.*)?$|^none$",
   "Default": "none",
   "Description": "URL for the AS3 declaration JSON file to be deployed. Leave as **none** to deploy without a service configuration.",
   "Type": "String"
  },
  "environment": {
   "Default": "f5env",
   "Description": "Name of the Environment Tag",
   "Type": "String"
  },
  "group": {
   "Default": "f5group",
   "Description": "Name of the Group Tag",
   "Type": "String"
  },
  "imageName": {
   "AllowedValues": [
    "Best25Mbps",
    "Best200Mbps",
    "Best1000Mbps",
    "Best5000Mbps",
    "Best10000Mbps",
    "AdvancedWaf25Mbps",
    "AdvancedWaf200Mbps",
    "AdvancedWaf1000Mbps",
    "AdvancedWaf8vCPU",
    "AdvancedWaf16vCPU",
    "PerAppVeAwaf25Mbps",
    "PerAppVeAwaf200Mbps",
    "PerAppVeLtm25Mbps",
    "PerAppVeLtm200Mbps"
   ],
   "ConstraintDescription": "Must be a valid F5 BIG-IP VE image type",
   "Default": "Best1000Mbps",
   "Description": "F5 BIG-IP Performance Type",
   "Type": "String"
  },
  "instanceType": {
   "AllowedValues": [
    "m3.2xlarge",
    "m4.xlarge",
    "m4.2xlarge",
    "m4.4xlarge",
    "m4.10xlarge",
    "m5.large",
    "m5.xlarge",
    "m5.2xlarge",
    "m5.4xlarge",
    "c3.4xlarge",
    "c3.8xlarge",
    "c4.4xlarge",
    "c4.8xlarge",
    "c5.large",
    "c5.xlarge",
    "c5.2xlarge",
    "c5.4xlarge",
    "cc2.8xlarge",
    "c5n.2xlarge",
    "c5n.4xlarge"
   ],
   "ConstraintDescription": "Must be a valid EC2 instance type for BIG-IP",
   "Default": "m3.2xlarge",
   "Description": "AWS instance type",
   "Type": "String"
  },
  "managementGuiPort": {
   "ConstraintDescription": "Must be a valid, unused port on the BIG-IP.",
   "Default": "8443",
   "Description": "Port for the BIG-IP management Configuration utility",
   "Type": "Number"
  },
  "ntpServer": {
   "Default": "0.pool.ntp.org",
   "Description": "NTP server for this implementation",
   "Type": "String"
  },
  "owner": {
   "Default": "f5owner",
   "Description": "Name of the Owner Tag",
   "Type": "String"
  },
  "provisionPublicIP": {
   "AllowedValues": [
    "Yes",
    "No"
   ],
   "Default": "Yes",
   "Description": "Whether or not to provision Public IP Addresses for the BIG-IP Network Interfaces. By Default no Public IP addresses are provisioned.",
   "Type": "String"
  },
  "restrictedSrcAddress": {
   "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
   "ConstraintDescription": "Must be a valid IP CIDR range of the form x.x.x.x/x.",
   "Description": " The IP address range used to SSH and access managment GUI on the EC2 instances",
   "MaxLength": "18",
   "MinLength": "9",
   "Type": "String"
  },
  "restrictedSrcAddressApp": {
   "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
   "ConstraintDescription": "Must be a valid IP CIDR range of the form x.x.x.x/x.",
   "Description": " The IP address range that can be used to access web traffic (80/443) to the EC2 instances",
   "MaxLength": "18",
   "MinLength": "9",
   "Type": "String"
  },
  "sshKey": {
   "Description": "EC2 KeyPair to enable SSH access to the BIG-IP instance",
   "Type": "AWS::EC2::KeyPair::KeyName"
  },
  "subnet1Az1": {
   "ConstraintDescription": "The subnet ID must be within an existing VPC",
   "Description": "Public or External subnet",
   "Type": "AWS::EC2::Subnet::Id"
  },
  "subnet1Az1Address": {
   "Default": "DYNAMIC",
   "Description": "Optional. If you want to assign static IP address(es) in the subnet, type them here.  Separate multiple IP addresses with a comma (the first is the Primary IP address, all others are Secondary).  Otherwise leave DYNAMIC and a dynamic address is assigned based on the subnet you specified.",
   "Type": "String"
  },
  "timezone": {
   "Default": "UTC",
   "Description": "Enter the Olson timezone string from /usr/share/zoneinfo. The default is 'UTC'. See the TZ column here (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) for legal values. For example, 'US/Eastern'.",
   "Type": "String"
  }
 },
 "Resources": {
  "Bigip1Instance": {
   "Metadata": {
    "AWS::CloudFormation::Init": {
     "config": {
      "commands": {
       "000-disable-1nicautoconfig": {
        "command": "/usr/bin/setdb provision.1nicautoconfig disable"
       },
       "010-install-libs": {
        "command": {
         "Fn::Join": [
          " ",
          [
           "mkdir -p /var/log/cloud/aws;",
           "nohup /config/installCloudLibs.sh",
           "&>> /var/log/cloud/aws/install.log < /dev/null &"
          ]
         ]
        }
       },
       "020-generate-password": {
        "command": {
         "Fn::Join": [
          "",
          [
           "nohup /config/waitThenRun.sh",
           " f5-rest-node /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/runScript.js",
           " --signal PASSWORD_CREATED",
           " --file f5-rest-node",
           " --cl-args '/config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/generatePassword --file /config/cloud/aws/.adminPassword --encrypt'",
           " --log-level silly",
           " -o /var/log/cloud/aws/generatePassword.log",
           " &>> /var/log/cloud/aws/install.log < /dev/null",
           " &"
          ]
         ]
        }
       },
       "030-create-admin-user": {
        "command": {
         "Fn::Join": [
          "",
          [
           "nohup /config/waitThenRun.sh",
           " f5-rest-node /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/runScript.js",
           " --wait-for PASSWORD_CREATED",
           " --signal ADMIN_CREATED",
           " --file /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/createUser.sh",
           " --cl-args '--user admin",
           " --password-file /config/cloud/aws/.adminPassword",
           " --password-encrypted",
           "'",
           " --log-level silly",
           " -o /var/log/cloud/aws/createUser.log",
           " &>> /var/log/cloud/aws/install.log < /dev/null",
           " &"
          ]
         ]
        }
       },
       "040-network-config": {
        "command": {
         "Fn::Join": [
          "",
          [
           "nohup /config/waitThenRun.sh ",
           "f5-rest-node /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/runScript.js ",
           "--file /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/aws/1nicSetup.sh ",
           "--cwd /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/aws ",
           "--log-level silly ",
           "-o /var/log/cloud/aws/1nicSetup.log ",
           "--wait-for ADMIN_CREATED ",
           "--signal NETWORK_CONFIG_DONE ",
           "&>> /var/log/cloud/aws/install.log < /dev/null &"
          ]
         ]
        }
       },
       "050-onboard-BIG-IP": {
        "command": {
         "Fn::If": [
          "optin",
          {
           "Fn::Join": [
            " ",
            [
             "REGION=\"",
             {
              "Ref": "AWS::Region"
             },
             "\";",
             "DEPLOYMENTID=`echo \"",
             {
              "Ref": "AWS::StackId"
             },
             "\"|sha512sum|cut -d \" \" -f 1`;",
             "CUSTOMERID=`echo \"",
             {
              "Ref": "AWS::AccountId"
             },
             "\"|sha512sum|cut -d \" \" -f 1`;",
             "NAME_SERVER=`/config/cloud/aws/getNameServer.sh mgmt`;",
             "nohup /config/waitThenRun.sh",
             "f5-rest-node /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/onboard.js",
             "--install-ilx-package file:///config/cloud/f5-appsvcs-3.18.0-4.noarch.rpm",
             "--port 8443",
             "--ssl-port ",
             {
              "Ref": "managementGuiPort"
             },
             "--wait-for NETWORK_CONFIG_DONE",
             "--signal ONBOARD_DONE",
             "-o /var/log/cloud/aws/onboard.log",
             "--log-level silly",
             "--no-reboot",
             "--host localhost",
             "--user admin",
             "--password-url file:///config/cloud/aws/.adminPassword",
             "--password-encrypted",
             "--hostname `curl -s -f --retry 20 http://169.254.169.254/latest/meta-data/hostname`",
             "--ntp ",
             {
              "Ref": "ntpServer"
             },
             "--tz ",
             {
              "Ref": "timezone"
             },
             "--dns ${NAME_SERVER}",
             "--modules ",
             {
              "Ref": "bigIpModules"
             },
             "--module asm:nominal",
             "--metrics \"cloudName:aws,region:${REGION},bigIpVersion:15.0.1.1-0.0.3,customerId:${CUSTOMERID},deploymentId:${DEPLOYMENTID},templateName:f5-existing-stack-payg-1nic-bigip-w-waf.template,templateVersion:5.5.0,licenseType:hourly\"",
             "-d tm.tcpudptxchecksum:software-only ",
             "--ping",
             "&>> /var/log/cloud/aws/install.log < /dev/null &"
            ]
           ]
          },
          {
           "Fn::Join": [
            " ",
            [
             "NAME_SERVER=`/config/cloud/aws/getNameServer.sh mgmt`;",
             "nohup /config/waitThenRun.sh",
             "f5-rest-node /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/onboard.js",
             "--install-ilx-package file:///config/cloud/f5-appsvcs-3.18.0-4.noarch.rpm",
             "--port 8443",
             "--ssl-port ",
             {
              "Ref": "managementGuiPort"
             },
             "--wait-for NETWORK_CONFIG_DONE",
             "--signal ONBOARD_DONE",
             "-o /var/log/cloud/aws/onboard.log",
             "--log-level silly",
             "--no-reboot",
             "--host localhost",
             "--user admin",
             "--password-url file:///config/cloud/aws/.adminPassword",
             "--password-encrypted",
             "--hostname `curl -s -f --retry 20 http://169.254.169.254/latest/meta-data/hostname`",
             "--ntp ",
             {
              "Ref": "ntpServer"
             },
             "--tz ",
             {
              "Ref": "timezone"
             },
             "--dns ${NAME_SERVER}",
             "--modules ",
             {
              "Ref": "bigIpModules"
             },
             "--module asm:nominal",
             "-d tm.tcpudptxchecksum:software-only ",
             "--ping",
             "&>> /var/log/cloud/aws/install.log < /dev/null &"
            ]
           ]
          }
         ]
        }
       },
       "060-custom-config": {
        "command": {
         "Fn::Join": [
          " ",
          [
           "nohup /config/waitThenRun.sh",
           "f5-rest-node /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/runScript.js",
           "--file /config/cloud/aws/custom-config.sh",
           "--cwd /config/cloud/aws",
           "-o /var/log/cloud/aws/custom-config.log",
           "--log-level silly",
           "--wait-for ONBOARD_DONE",
           "--signal CUSTOM_CONFIG_DONE",
           "&>> /var/log/cloud/aws/install.log < /dev/null &"
          ]
         ]
        }
       },
       "065-cluster": {
        "command": {
         "Fn::Join": [
          " ",
          []
         ]
        }
       },
       "070-rm-password": {
        "command": {
         "Fn::Join": [
          " ",
          [
           "nohup /config/waitThenRun.sh",
           "f5-rest-node /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/runScript.js",
           "--file /config/cloud/aws/rm-password.sh",
           "-o /var/log/cloud/aws/rm-password.log",
           "--log-level silly",
           "--wait-for CUSTOM_CONFIG_DONE",
           "--signal PASSWORD_REMOVED",
           "&>> /var/log/cloud/aws/install.log < /dev/null &"
          ]
         ]
        }
       }
      },
      "files": {
       "/config/cloud/aws/custom-config.sh": {
        "content": {
         "Fn::Join": [
          "",
          [
           "#!/bin/bash\n",
           "PROGNAME=$(basename $0)\n",
           "function error_exit {\n",
           "echo \"${PROGNAME}: ${1:-\\\"Unknown Error\\\"}\" 1>&2\n",
           "exit 1\n",
           "}\n",
           "declare -a tmsh=()\n",
           "echo 'starting custom-config.sh'\n",
           "source /config/cloud/aws/onboard_config_vars\n",
           "if [[ $allowPhoneHome == \"No\" ]]; then\n",
           "    tmsh+=(\n",
           "    \"tmsh modify sys software update auto-phonehome disabled\")\n",
           "fi\n",
           "tmsh+=(\n",
           "\"tmsh modify net self-allow defaults add { tcp:6123 tcp:6124 tcp:6125 tcp:6126 tcp:6127 tcp:6128 }\"\n",
           "\"curl -s -f --retry 20 -o /home/admin/asm-policy-linux-high.xml http://cdn.f5.com/product/templates/utils/asm-policy-linux-high.xml\"\n",
           "\"tmsh load asm policy file /home/admin/asm-policy-linux-high.xml\"\n",
           "\"tmsh modify asm policy /Common/linux-high active\"\n",
           "\"tmsh create ltm policy app-ltm-policy strategy first-match legacy\"\n",
           "\"tmsh modify ltm policy app-ltm-policy controls add { asm }\"\n",
           "\"tmsh modify ltm policy app-ltm-policy rules add { associate-asm-policy { actions replace-all-with { 0 { asm request enable policy /Common/linux-high } } } }\"\n",
           "\"tmsh load sys application template /config/cloud/aws/f5.service_discovery.tmpl\"\n",
           "\"tmsh load sys application template /config/cloud/aws/f5.cloud_logger.v1.0.0.tmpl\"\n",
           "\"tmsh save /sys config\")\n",
           "for CMD in \"${tmsh[@]}\"\n",
           "do\n",
           "  \"/config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/waitForMcp.sh\"\n",
           "    if $CMD;then\n",
           "        echo \"command $CMD successfully executed.\"\n",
           "    else\n",
           "        error_exit \"$LINENO: An error has occurred while executing $CMD. Aborting!\"\n",
           "    fi\n",
           "done\n",
           "date\n",
           "### START CUSTOM CONFIGURATION\n",
           "deployed=\"no\"\n",
           "url_regex=\"(http:\\/\\/|https:\\/\\/)?[a-z0-9]+([\\-\\.]{1}[a-z0-9]+)*\\.[a-z]{2,5}(:[0-9]{1,5})?(\\/.*)?$\"\n",
           "file_loc=\"/config/cloud/custom_config\"\n",
           "if [[ $declarationUrl =~ $url_regex ]]; then\n",
           "  response_code=$(/usr/bin/curl -sk -w \"%{http_code}\" $declarationUrl -o $file_loc)\n",
           "  if [[ $response_code == 200 ]]; then\n",
           "    echo \"Custom config download complete; checking for valid JSON.\"\n",
           "    cat $file_loc | jq .class\n",
           "    if [[ $? == 0 ]]; then\n",
           "      response_code=$(/usr/bin/curl -skvvu ${adminUsername}:$passwd -w \"%{http_code}\" -X POST -H \"Content-Type: application/json\" -H \"Expect:\" https://localhost:${managementGuiPort}/mgmt/shared/appsvcs/declare -d @$file_loc -o /dev/null)\n",
           "      if [[ $response_code == 200 || $response_code == 502 ]]; then\n",
           "        echo \"Deployment of custom application succeeded.\"\n",
           "        deployed=\"yes\"\n",
           "      else\n",
           "         echo \"Failed to deploy custom application; continuing...\"\n",
           "      fi\n",
           "    else\n",
           "      echo \"Custom config was not valid JSON, continuing...\"\n",
           "    fi\n",
           "  else\n",
           "    echo \"Failed to download custom config; continuing...\"\n",
           "  fi\n",
           "else\n",
           "  echo \"Custom config was not a URL, continuing...\"\n",
           "fi\n",
           "### END CUSTOM CONFIGURATION"
          ]
         ]
        },
        "group": "root",
        "mode": "000755",
        "owner": "root"
       },
       "/config/cloud/aws/f5.cloud_logger.v1.0.0.tmpl": {
        "group": "root",
        "mode": "000755",
        "owner": "root",
        "source": "http://cdn.f5.com/product/cloudsolutions/iapps/common/f5-cloud-logger/v1.0.0/f5.cloud_logger.v1.0.0.tmpl"
       },
       "/config/cloud/aws/f5.service_discovery.tmpl": {
        "group": "root",
        "mode": "000755",
        "owner": "root",
        "source": "http://cdn.f5.com/product/cloudsolutions/iapps/common/f5-service-discovery/v2.3.2/f5.service_discovery.tmpl"
       },
       "/config/cloud/aws/getNameServer.sh": {
        "content": {
         "Fn::Join": [
          "\n",
          [
           "INTERFACE=$1",
           "INTERFACE_MAC=`ifconfig ${INTERFACE} | egrep ether | awk '{print tolower($2)}'`",
           "VPC_CIDR_BLOCK=`curl -s -f --retry 20 http://169.254.169.254/latest/meta-data/network/interfaces/macs/${INTERFACE_MAC}/vpc-ipv4-cidr-block`",
           "VPC_NET=${VPC_CIDR_BLOCK%/*}",
           "NAME_SERVER=`echo ${VPC_NET} | awk -F. '{ printf \"%d.%d.%d.%d\", $1, $2, $3, $4+2 }'`",
           "echo $NAME_SERVER"
          ]
         ]
        },
        "group": "root",
        "mode": "000755",
        "owner": "root"
       },
       "/config/cloud/aws/onboard_config_vars": {
        "content": {
         "Fn::Join": [
          "",
          [
           "",
           "#!/bin/bash\n",
           "# Generated from 5.5.0\n",
           "hostname=`curl http://169.254.169.254/latest/meta-data/hostname`\n",
           "region='",
           {
            "Ref": "AWS::Region"
           },
           "'\n",
           "adminUsername='admin'\n",
           "timezone='",
           {
            "Ref": "timezone"
           },
           "'\n",
           "ntpServer='",
           {
            "Ref": "ntpServer"
           },
           "'\n",
           "declarationUrl='",
           {
            "Ref": "declarationUrl"
           },
           "'\n",
           "allowPhoneHome='",
           {
            "Ref": "allowPhoneHome"
           },
           "'\n",
           "passwd=$(f5-rest-node /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/decryptDataFromFile.js --data-file /config/cloud/aws/.adminPassword)\n",
           "managementGuiPort='",
           {
            "Ref": "managementGuiPort"
           },
           "'\n"
          ]
         ]
        },
        "group": "root",
        "mode": "000755",
        "owner": "root"
       },
       "/config/cloud/aws/rm-password.sh": {
        "content": {
         "Fn::Join": [
          "",
          [
           "#!/bin/bash\n",
           "PROGNAME=$(basename $0)\n",
           "function error_exit {\n",
           "echo \"${PROGNAME}: ${1:-\"Unknown Error\"}\" 1>&2\n",
           "exit 1\n",
           "}\n",
           "date\n",
           "echo 'starting rm-password.sh'\n",
           "declare -a tmsh=()\n",
           "tmsh+=(\"rm /config/cloud/aws/.adminPassword\")\n",
           "for CMD in \"${tmsh[@]}\"\n",
           "do\n",
           "  if $CMD;then\n",
           "      echo \"command $CMD successfully executed.\"\n",
           "  else\n",
           "      error_exit \"$LINENO: An error has occurred while executing $CMD. Aborting!\"\n",
           "  fi\n",
           "done\n",
           "date\n"
          ]
         ]
        },
        "group": "root",
        "mode": "000755",
        "owner": "root"
       },
       "/config/cloud/f5-appsvcs-3.18.0-4.noarch.rpm": {
        "group": "root",
        "mode": "000755",
        "owner": "root",
        "source": "http://cdn.f5.com/product/cloudsolutions/f5-appsvcs-extension/v3.18.0/f5-appsvcs-3.18.0-4.noarch.rpm"
       },
       "/config/cloud/f5-cloud-libs-aws.tar.gz": {
        "group": "root",
        "mode": "000755",
        "owner": "root",
        "source": "http://cdn.f5.com/product/cloudsolutions/f5-cloud-libs-aws/v2.6.0/f5-cloud-libs-aws.tar.gz"
       },
       "/config/cloud/f5-cloud-libs.tar.gz": {
        "group": "root",
        "mode": "000755",
        "owner": "root",
        "source": "http://cdn.f5.com/product/cloudsolutions/f5-cloud-libs/v4.18.0/f5-cloud-libs.tar.gz"
       },
       "/config/installCloudLibs.sh": {
        "content": {
         "Fn::Join": [
          "\n",
          [
           "#!/bin/bash",
           "echo about to execute",
           "checks=0",
           "while [ $checks -lt 120 ]; do echo checking mcpd",
           "    tmsh -a show sys mcp-state field-fmt | grep -q running",
           "    if [ $? == 0 ]; then",
           "        echo mcpd ready",
           "        break",
           "    fi",
           "    echo mcpd not ready yet",
           "    let checks=checks+1",
           "    sleep 10",
           "done",
           "echo loading verifyHash script",
           "if ! tmsh load sys config merge file /config/verifyHash; then",
           "    echo cannot validate signature of /config/verifyHash",
           "    exit",
           "fi",
           "echo loaded verifyHash",
           "declare -a filesToVerify=(\"/config/cloud/f5-cloud-libs.tar.gz\" \"/config/cloud/f5-cloud-libs-aws.tar.gz\" \"/config/cloud/f5-appsvcs-3.18.0-4.noarch.rpm\" \"/config/cloud/aws/f5.service_discovery.tmpl\" \"/config/cloud/aws/f5.cloud_logger.v1.0.0.tmpl\")",
           "for fileToVerify in \"${filesToVerify[@]}\"",
           "do",
           "    echo verifying \"$fileToVerify\"",
           "    if ! tmsh run cli script verifyHash \"$fileToVerify\"; then",
           "        echo \"$fileToVerify\" is not valid",
           "        exit 1",
           "    fi",
           "    echo verified \"$fileToVerify\"",
           "done",
           "mkdir -p /config/cloud/aws/node_modules/@f5devcentral",
           "echo expanding f5-cloud-libs.tar.gz",
           "tar xvfz /config/cloud/f5-cloud-libs.tar.gz -C /config/cloud/aws/node_modules/@f5devcentral",
           "echo installing dependencies",
           "tar xvfz /config/cloud/f5-cloud-libs-aws.tar.gz -C /config/cloud/aws/node_modules/@f5devcentral",
           "echo cloud libs install complete",
           "touch /config/cloud/cloudLibsReady"
          ]
         ]
        },
        "group": "root",
        "mode": "000755",
        "owner": "root"
       },
       "/config/verifyHash": {
        "content": "cli script /Common/verifyHash {\nproc script::run {} {\n        if {[catch {\n            set hashes(f5-cloud-libs.tar.gz) 3204d687e98ff534b8a698e0341cf77baaa9999a96541fec996c06b84a3b6d122eb9f4744f891e196325c47ac6cc904e9113cf22ebf6634f38153bc6872dbc54\n            set hashes(f5-cloud-libs-aws.tar.gz) 2ff4e6269ce74850fc3794045d0a394ecd0b472ba9efa16b34786b38d07088b3a49339b41708973c4bffe55a539471c2f9ec60a009ddd087912c1fca722b48ef\n            set hashes(f5-cloud-libs-azure.tar.gz) 6db2878a2c10d98550eded6b66f0474516c1952d3605217164e3b5261c771419201d94c7cdb07744c9d5db894334f93380963217b670d87d3151bfcdb301c295\n            set hashes(f5-cloud-libs-gce.tar.gz) a5cfaed1fe33da677b3f10dc1a7ca82f5739ff24e45e91b3a8f7b06d6b2e280e5f1eaf5fe2d33009b2cc67c10f2d906aab26f942d591b68fa8a7fddfd54a0efe\n            set hashes(f5-cloud-libs-openstack.tar.gz) 5c83fe6a93a6fceb5a2e8437b5ed8cc9faf4c1621bfc9e6a0779f6c2137b45eab8ae0e7ed745c8cf821b9371245ca29749ca0b7e5663949d77496b8728f4b0f9\n            set hashes(f5-cloud-libs-consul.tar.gz) a32aab397073df92cbbba5067e5823e9b5fafca862a258b60b6b40aa0975c3989d1e110f706177b2ffbe4dde65305a260a5856594ce7ad4ef0c47b694ae4a513\n            set hashes(asm-policy-linux.tar.gz) 63b5c2a51ca09c43bd89af3773bbab87c71a6e7f6ad9410b229b4e0a1c483d46f1a9fff39d9944041b02ee9260724027414de592e99f4c2475415323e18a72e0\n            set hashes(f5.http.v1.2.0rc4.tmpl) 47c19a83ebfc7bd1e9e9c35f3424945ef8694aa437eedd17b6a387788d4db1396fefe445199b497064d76967b0d50238154190ca0bd73941298fc257df4dc034\n            set hashes(f5.http.v1.2.0rc6.tmpl) 811b14bffaab5ed0365f0106bb5ce5e4ec22385655ea3ac04de2a39bd9944f51e3714619dae7ca43662c956b5212228858f0592672a2579d4a87769186e2cbfe\n            set hashes(f5.http.v1.2.0rc7.tmpl) 21f413342e9a7a281a0f0e1301e745aa86af21a697d2e6fdc21dd279734936631e92f34bf1c2d2504c201f56ccd75c5c13baa2fe7653213689ec3c9e27dff77d\n            set hashes(f5.aws_advanced_ha.v1.3.0rc1.tmpl) 9e55149c010c1d395abdae3c3d2cb83ec13d31ed39424695e88680cf3ed5a013d626b326711d3d40ef2df46b72d414b4cb8e4f445ea0738dcbd25c4c843ac39d\n            set hashes(f5.aws_advanced_ha.v1.4.0rc1.tmpl) de068455257412a949f1eadccaee8506347e04fd69bfb645001b76f200127668e4a06be2bbb94e10fefc215cfc3665b07945e6d733cbe1a4fa1b88e881590396\n            set hashes(f5.aws_advanced_ha.v1.4.0rc2.tmpl) 6ab0bffc426df7d31913f9a474b1a07860435e366b07d77b32064acfb2952c1f207beaed77013a15e44d80d74f3253e7cf9fbbe12a90ec7128de6facd097d68f\n            set hashes(f5.aws_advanced_ha.v1.4.0rc3.tmpl) 2f2339b4bc3a23c9cfd42aae2a6de39ba0658366f25985de2ea53410a745f0f18eedc491b20f4a8dba8db48970096e2efdca7b8efffa1a83a78e5aadf218b134\n            set hashes(f5.aws_advanced_ha.v1.4.0rc4.tmpl) 2418ac8b1f1884c5c096cbac6a94d4059aaaf05927a6a4508fd1f25b8cc6077498839fbdda8176d2cf2d274a27e6a1dae2a1e3a0a9991bc65fc74fc0d02ce963\n            set hashes(f5.aws_advanced_ha.v1.4.0rc5.tmpl) 5e582187ae1a6323e095d41eddd41151d6bd38eb83c634410d4527a3d0e246a8fc62685ab0849de2ade62b0275f51264d2deaccbc16b773417f847a4a1ea9bc4\n            set hashes(asm-policy.tar.gz) 2d39ec60d006d05d8a1567a1d8aae722419e8b062ad77d6d9a31652971e5e67bc4043d81671ba2a8b12dd229ea46d205144f75374ed4cae58cefa8f9ab6533e6\n            set hashes(deploy_waf.sh) 1a3a3c6274ab08a7dc2cb73aedc8d2b2a23cd9e0eb06a2e1534b3632f250f1d897056f219d5b35d3eed1207026e89989f754840fd92969c515ae4d829214fb74\n            set hashes(f5.policy_creator.tmpl) 06539e08d115efafe55aa507ecb4e443e83bdb1f5825a9514954ef6ca56d240ed00c7b5d67bd8f67b815ee9dd46451984701d058c89dae2434c89715d375a620\n            set hashes(f5.service_discovery.tmpl) 4811a95372d1dbdbb4f62f8bcc48d4bc919fa492cda012c81e3a2fe63d7966cc36ba8677ed049a814a930473234f300d3f8bced2b0db63176d52ac99640ce81b\n            set hashes(f5.cloud_logger.v1.0.0.tmpl) 64a0ed3b5e32a037ba4e71d460385fe8b5e1aecc27dc0e8514b511863952e419a89f4a2a43326abb543bba9bc34376afa114ceda950d2c3bd08dab735ff5ad20\n            set hashes(f5-appsvcs-3.5.1-5.noarch.rpm) ba71c6e1c52d0c7077cdb25a58709b8fb7c37b34418a8338bbf67668339676d208c1a4fef4e5470c152aac84020b4ccb8074ce387de24be339711256c0fa78c8\n            set hashes(f5-appsvcs-3.18.0-4.noarch.rpm) e72ee8005a27070ac399ab097e8aa507a72aae4721d7491589cfeb821db3ef86cbc979e796ab319ec727bb51400ccda813c4b9eb4a6b3d1220a396b582f8f400\n            set hashes(f5-cloud-failover-1.1.0-0.noarch.rpm) 15a440c299f9e4af86a3d0f5b0d75b0054385b95e47c3ef116d2e0bfb0041a26dcbf549028e2a26d2c718ec61446bd657be38fbbcd9db781efe5414c174ac68c\n\n            set file_path [lindex $tmsh::argv 1]\n            set file_name [file tail $file_path]\n\n            if {![info exists hashes($file_name)]} {\n                tmsh::log err \"No hash found for $file_name\"\n                exit 1\n            }\n\n            set expected_hash $hashes($file_name)\n            set computed_hash [lindex [exec /usr/bin/openssl dgst -r -sha512 $file_path] 0]\n            if { $expected_hash eq $computed_hash } {\n                exit 0\n            }\n            tmsh::log err \"Hash does not match for $file_path\"\n            exit 1\n        }]} {\n            tmsh::log err {Unexpected error in verifyHash}\n            exit 1\n        }\n    }\n    script-signature GaAiifN3sgNZzehZ10aVF38Yv7kX+S7gFdQNwB4bBYjT6XU7dpYPsTR7ZqZDHnT6Kb5yLpGzn8daiFaIy+lXYCbais3cPCsbjwjuhatkYKRN7F++RjUXsorbqJMd7aHZzu3St5yinwJcgM1F+3thY+yyFrvxv8cRyqqpMJrMUP6tpJgxjzDd+OFYHRm8PaVBVuQWoLwxbzz0ykOmxjTKAvh72JimP6871NZkWzLgzuqVT2mY9jrBvkN1OuywTm+QQgW4q+oPjLNr5ANfBHQPv/+5ZZbsmmb1EAyvRJKTPUf3xBSoxmPw9GjOSLrMH5qGZolw/Yqefn76PMQ8xM8diA==\n    signing-key /Common/f5-irule\n}",
        "group": "root",
        "mode": "000755",
        "owner": "root"
       },
       "/config/waitThenRun.sh": {
        "content": {
         "Fn::Join": [
          "\n",
          [
           "#!/bin/bash",
           "while true; do echo \"waiting for cloud libs install to complete\"",
           "    if [ -f /config/cloud/cloudLibsReady ]; then",
           "        break",
           "    else",
           "        sleep 10",
           "    fi",
           "done",
           "\"$@\""
          ]
         ]
        },
        "group": "root",
        "mode": "000755",
        "owner": "root"
       }
      }
     }
    }
   },
   "Properties": {
    "BlockDeviceMappings": [
     {
      "DeviceName": "/dev/xvda",
      "Ebs": {
       "DeleteOnTermination": "true",
       "VolumeSize": "100",
       "VolumeType": "gp2"
      }
     },
     {
      "DeviceName": "/dev/xvdb",
      "NoDevice": {}
     }
    ],
    "IamInstanceProfile": {
     "Ref": "bigipServiceDiscoveryProfile"
    },
    "ImageId": {
     "Fn::If": [
      "noCustomImageId",
      {
       "Fn::FindInMap": [
        "BigipRegionMap",
        {
         "Ref": "AWS::Region"
        },
        {
         "Ref": "imageName"
        }
       ]
      },
      {
       "Ref": "customImageId"
      }
     ]
    },
    "InstanceType": {
     "Ref": "instanceType"
    },
    "KeyName": {
     "Ref": "sshKey"
    },
    "NetworkInterfaces": [
     {
      "Description": "Public or External Interface",
      "DeviceIndex": "0",
      "NetworkInterfaceId": {
       "Fn::If": [
        "useDynamicExternalIpAddr",
        {
         "Ref": "Bigip1subnet1Az1Interface"
        },
        {
         "Ref": "Bigip1Staticsubnet1Az1Interface"
        }
       ]
      }
     }
    ],
    "Tags": [
     {
      "Key": "Application",
      "Value": {
       "Ref": "application"
      }
     },
     {
      "Key": "Costcenter",
      "Value": {
       "Ref": "costcenter"
      }
     },
     {
      "Key": "Environment",
      "Value": {
       "Ref": "environment"
      }
     },
     {
      "Key": "Group",
      "Value": {
       "Ref": "group"
      }
     },
     {
      "Key": "Name",
      "Value": {
       "Fn::Join": [
        "",
        [
         "Big-IP: ",
         {
          "Ref": "AWS::StackName"
         }
        ]
       ]
      }
     },
     {
      "Key": "Owner",
      "Value": {
       "Ref": "owner"
      }
     }
    ],
    "UserData": {
     "Fn::Base64": {
      "Fn::Join": [
       "",
       [
        "#!/bin/bash\n",
        "/opt/aws/apitools/cfn-init/bin/cfn-init -v -s ",
        {
         "Ref": "AWS::StackId"
        },
        " -r ",
        "Bigip1Instance",
        " --region ",
        {
         "Ref": "AWS::Region"
        },
        "\n"
       ]
      ]
     }
    }
   },
   "Type": "AWS::EC2::Instance"
  },
  "Bigip1Staticsubnet1Az1Interface": {
   "Condition": "useStaticExternalIpAddr",
   "Properties": {
    "Description": "Public External Interface for the BIG-IP",
    "GroupSet": [
     {
      "Ref": "bigipExternalSecurityGroup"
     }
    ],
    "PrivateIpAddresses": [
     {
      "Primary": "true",
      "PrivateIpAddress": {
       "Fn::Select": [
        "0",
        {
         "Fn::Split": [
          ",",
          {
           "Ref": "subnet1Az1Address"
          }
         ]
        }
       ]
      }
     },
     {
      "Primary": "false",
      "PrivateIpAddress": {
       "Fn::Select": [
        "1",
        {
         "Fn::Split": [
          ",",
          {
           "Ref": "subnet1Az1Address"
          }
         ]
        }
       ]
      }
     }
    ],
    "SubnetId": {
     "Ref": "subnet1Az1"
    }
   },
   "Type": "AWS::EC2::NetworkInterface"
  },
  "Bigip1subnet1Az1Interface": {
   "Condition": "useDynamicExternalIpAddr",
   "Properties": {
    "Description": "Public External Interface for the BIG-IP",
    "GroupSet": [
     {
      "Ref": "bigipExternalSecurityGroup"
     }
    ],
    "SecondaryPrivateIpAddressCount": "1",
    "SubnetId": {
     "Ref": "subnet1Az1"
    }
   },
   "Type": "AWS::EC2::NetworkInterface"
  },
  "Bigip1subnet1Az1SelfEipAddress": {
   "Condition": "usePublicIP",
   "Properties": {
    "Domain": "vpc"
   },
   "Type": "AWS::EC2::EIP"
  },
  "Bigip1subnet1Az1SelfEipAssociation": {
   "Condition": "usePublicIP",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "Bigip1subnet1Az1SelfEipAddress",
      "AllocationId"
     ]
    },
    "NetworkInterfaceId": {
     "Fn::If": [
      "useDynamicExternalIpAddr",
      {
       "Ref": "Bigip1subnet1Az1Interface"
      },
      {
       "Ref": "Bigip1Staticsubnet1Az1Interface"
      }
     ]
    },
    "PrivateIpAddress": {
     "Fn::If": [
      "useDynamicExternalIpAddr",
      {
       "Fn::GetAtt": [
        "Bigip1subnet1Az1Interface",
        "PrimaryPrivateIpAddress"
       ]
      },
      {
       "Fn::GetAtt": [
        "Bigip1Staticsubnet1Az1Interface",
        "PrimaryPrivateIpAddress"
       ]
      }
     ]
    }
   },
   "Type": "AWS::EC2::EIPAssociation"
  },
  "bigipExternalSecurityGroup": {
   "Properties": {
    "GroupDescription": "Public or External interface rules, including BIG-IP management",
    "SecurityGroupIngress": [
     {
      "CidrIp": {
       "Ref": "restrictedSrcAddress"
      },
      "FromPort": "22",
      "IpProtocol": "tcp",
      "ToPort": "22"
     },
     {
      "CidrIp": {
       "Ref": "restrictedSrcAddress"
      },
      "FromPort": {
       "Ref": "managementGuiPort"
      },
      "IpProtocol": "tcp",
      "ToPort": {
       "Ref": "managementGuiPort"
      }
     },
     {
      "CidrIp": {
       "Ref": "restrictedSrcAddressApp"
      },
      "FromPort": "80",
      "IpProtocol": "tcp",
      "ToPort": "80"
     },
     {
      "CidrIp": {
       "Ref": "restrictedSrcAddressApp"
      },
      "FromPort": "443",
      "IpProtocol": "tcp",
      "ToPort": "443"
     }
    ],
    "Tags": [
     {
      "Key": "Application",
      "Value": {
       "Ref": "application"
      }
     },
     {
      "Key": "Costcenter",
      "Value": {
       "Ref": "costcenter"
      }
     },
     {
      "Key": "Environment",
      "Value": {
       "Ref": "environment"
      }
     },
     {
      "Key": "Group",
      "Value": {
       "Ref": "group"
      }
     },
     {
      "Key": "Name",
      "Value": {
       "Fn::Join": [
        "",
        [
         "Bigip Security Group: ",
         {
          "Ref": "AWS::StackName"
         }
        ]
       ]
      }
     },
     {
      "Key": "Owner",
      "Value": {
       "Ref": "owner"
      }
     }
    ],
    "VpcId": {
     "Ref": "Vpc"
    }
   },
   "Type": "AWS::EC2::SecurityGroup"
  },
  "bigipSecurityGroupIngressAsmPolicySync": {
   "Properties": {
    "FromPort": "6123",
    "GroupId": {
     "Ref": "bigipExternalSecurityGroup"
    },
    "IpProtocol": "tcp",
    "SourceSecurityGroupId": {
     "Ref": "bigipExternalSecurityGroup"
    },
    "ToPort": "6128"
   },
   "Type": "AWS::EC2::SecurityGroupIngress"
  },
  "bigipServiceDiscoveryAccessRole": {
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": [
        "sts:AssumeRole"
       ],
       "Effect": "Allow",
       "Principal": {
        "Service": [
         "ec2.amazonaws.com"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Path": "/",
    "Policies": [
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": [
          "ec2:DescribeInstances",
          "ec2:DescribeInstanceStatus",
          "ec2:DescribeAddresses",
          "ec2:AssociateAddress",
          "ec2:DisassociateAddress",
          "ec2:DescribeNetworkInterfaces",
          "ec2:DescribeNetworkInterfaceAttribute",
          "ec2:DescribeRouteTables",
          "ec2:ReplaceRoute",
          "ec2:assignprivateipaddresses",
          "sts:AssumeRole"
         ],
         "Effect": "Allow",
         "Resource": [
          "*"
         ]
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "BigipServiceDiscoveryPolicy"
     }
    ]
   },
   "Type": "AWS::IAM::Role"
  },
  "bigipServiceDiscoveryProfile": {
   "Properties": {
    "Path": "/",
    "Roles": [
     {
      "Ref": "bigipServiceDiscoveryAccessRole"
     }
    ]
   },
   "Type": "AWS::IAM::InstanceProfile"
  }
 }
}
